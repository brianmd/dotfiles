# Copy-paste integration on a mac (pbcopy/pbpaste)
#    note: this kills on meta, maybe because it is remote?
# set-option -g default-command "reattach-to-user-namespace -l zsh"

unbind C-b
set -g prefix  C-j
set -g prefix2 M-j
# in nested tmux sessions, hit M-j j
bind-key j send-prefix

unbind r
bind r source-file ${HOME}/.tmux.conf \; display "Reloaded"

bind-key -n M-s choose-session
# bind-key -n M-9 switch-client -p
# bind-key -n M-0 switch-client -n

setw -g aggressive-resize on

setw -g mode-keys vi


##########   MAC KEYBINDINGS

# these are found at http://evertpot.com/osx-tmux-vim-copy-paste-clipboard/
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

##########  END MAC KEYBINDINGS

##########  LINUX KEYBINDINGS
# bind -t vi-copy y copy-pipe "xclip"


set -sg escape-time 0

bind -n M-N new-window

bind M-j last-window
bind -n M-! select-window -t 1
bind -n M-@ select-window -t 2
bind -n M-'#' select-window -t 3
bind -n M-'$' select-window -t 4
bind -n M-% select-window -t 5
bind -n M-^ select-window -t 6
bind -n M-& select-window -t 7
bind -n M-* select-window -t 8
bind -n M-( select-window -t 9

bind-key a set-window-option synchronize-panes

bind -n M-o swap-pane -D
bind -n M-H select-pane -L
bind -n M-J select-pane -D
bind -n M-K select-pane -U
bind -n M-L select-pane -R

# bind -n A-\ split-window -h -c '#{pane_current_path}'
# bind -n A-- split-window -v -c '#{pane_current_path}'
bind -n M-| split-window -h -c '#{pane_current_path}'
# bind -n M-_ split-window -v -c '#{pane_current_path}'

bind -n M-= select-layout even-horizontal
bind -n M-+ select-layout even-vertical
# x-monad style
#bind -n M-x select-layout main-vertical
bind -n M-{ previous-window
bind -n M-} next-window
# bind -n M-J previous-window
# bind -n M-K next-window

# bind-key -nr    M-K resize-pane -U
# bind-key -nr  M-J resize-pane -D
# bind-key -nr  M-H resize-pane -L
# bind-key -nr M-L resize-pane -R
bind-key -nr C-S-Up resize-pane -U
bind-key -nr C-S-Down resize-pane -D
bind-key -nr M-S-Left resize-pane -L
bind-key -nr M-S-Right resize-pane -R

bind-key -n M-PPage copy-mode -u

# for tmux 2.1
set-option -g mouse on

# for tmux prior to 2.1
# set-option -g mouse-utf8 off
# setw -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on

bind-key -n M-u copy-mode
bind-key -n M-i paste-buffer

set-option -g history-limit 100000

set -g default-terminal "screen-256color"
set-window-option -g xterm-keys on
set -g xterm-keys on

set -g status-bg black
set -g status-fg white
set -g status on

setw -g monitor-activity on
set -g visual-activity on

set -g set-titles on
set -g set-titles-string '#S: #W'
# setw -g automatic-rename

# highlight current window
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg green

set-option -g base-index 1

# set color of active pane
set -g pane-border-fg colour235
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg black 

set -g status-left '#[fg=green]#S'
set -g status-right '#[fg=colour234,bg=white,nobold,nounderscore,noitalics] #[fg=colour250,bg=colour234] %a #[fg=colour247,bg=colour234] #[fg=colour247,bg=colour234] %b %d %R #[fg=colour252,bg=colour234,nobold,nounderscore,noitalics]#[fg=red,bg=colour234] #[fg=white,bg=red] #H'
setw -g window-status-current-format '#[fg=colour231,bg=colour31,bold] #I #W #[fg=colour31,bg=white,nobold,nounderscore,noitalics]'

# unbind S-Left
# unbind S-Right

